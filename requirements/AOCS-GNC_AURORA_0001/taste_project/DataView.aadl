--------------------------------------------------------
--! File generated by asn2aadl v2.2-rb689aa7: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:True:
--! InputASN1FileChecksum:8d958bcd3bcde6e6a86d19a1a77dc615:QGen_Tutorial.acn:
--! InputASN1FileChecksum:8bd46001d2f58dd90c19bf4b9baa0e6f:QGen_Tutorial.asn:
--! InputASN1FileChecksum:ff35cd78b1e82f09b63b209ab7cf7c34:/home/taste/tool-inst/share/taste-types/taste-types.asn:
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;
DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Simulink_Tunable_Parameter;

DATA Timer
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Timer";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Timer;

DATA Taste_directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Taste_directive;

DATA Taste_Implementation
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Taste-Implementation";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Taste_Implementation;


data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA T_B_b_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("QGen_Tutorial.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_QGEN_TUTORIAL_DATAVIEW);
    TASTE::Ada_Package_Name => "QGEN_TUTORIAL_DATAVIEW";
    Deployment::ASN1_Module_Name => "QGEN-TUTORIAL-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-B-b-T";
    TASTE::Position_In_File => [ line => 35 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END T_B_b_T;

DATA IMPLEMENTATION T_B_b_T.impl
END T_B_b_T.impl;

DATA T_B_b_T_Buffer_Max
END T_B_b_T_Buffer_Max;

DATA IMPLEMENTATION T_B_b_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_B_b_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_B_b_T_Buffer_Max.impl;

DATA T_B_b_T_Buffer
END T_B_b_T_Buffer;

DATA IMPLEMENTATION T_B_b_T_Buffer.impl
    -- Buffer to hold a marshalled data of type T_B_b_T
SUBCOMPONENTS
    Buffer : data T_B_b_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_B_b_T_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA IMPLEMENTATION T_Boolean.impl
END T_Boolean.impl;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Boolean_Buffer.impl;

DATA T_Control
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("QGen_Tutorial.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_QGEN_TUTORIAL_DATAVIEW);
    TASTE::Ada_Package_Name => "QGEN_TUTORIAL_DATAVIEW";
    Deployment::ASN1_Module_Name => "QGEN-TUTORIAL-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Control";
    TASTE::Position_In_File => [ line => 40 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END T_Control;

DATA IMPLEMENTATION T_Control.impl
END T_Control.impl;

DATA T_Control_Buffer_Max
END T_Control_Buffer_Max;

DATA IMPLEMENTATION T_Control_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Control
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Control_Buffer_Max.impl;

DATA T_Control_Buffer
END T_Control_Buffer;

DATA IMPLEMENTATION T_Control_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Control
SUBCOMPONENTS
    Buffer : data T_Control_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Control_Buffer.impl;

DATA T_Float
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("QGen_Tutorial.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_QGEN_TUTORIAL_DATAVIEW);
    TASTE::Ada_Package_Name => "QGEN_TUTORIAL_DATAVIEW";
    Deployment::ASN1_Module_Name => "QGEN-TUTORIAL-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Float";
    TASTE::Position_In_File => [ line => 27 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END T_Float;

DATA IMPLEMENTATION T_Float.impl
END T_Float.impl;

DATA T_Float_Buffer_Max
END T_Float_Buffer_Max;

DATA IMPLEMENTATION T_Float_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Float
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Float_Buffer_Max.impl;

DATA T_Float_Buffer
END T_Float_Buffer;

DATA IMPLEMENTATION T_Float_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Float
SUBCOMPONENTS
    Buffer : data T_Float_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Float_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA IMPLEMENTATION T_Int32.impl
END T_Int32.impl;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int32_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA IMPLEMENTATION T_Int8.impl
END T_Int8.impl;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int8_Buffer.impl;

DATA T_MT_Working
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("QGen_Tutorial.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_QGEN_TUTORIAL_DATAVIEW);
    TASTE::Ada_Package_Name => "QGEN_TUTORIAL_DATAVIEW";
    Deployment::ASN1_Module_Name => "QGEN-TUTORIAL-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-MT-Working";
    TASTE::Position_In_File => [ line => 37 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END T_MT_Working;

DATA IMPLEMENTATION T_MT_Working.impl
END T_MT_Working.impl;

DATA T_MT_Working_Buffer_Max
END T_MT_Working_Buffer_Max;

DATA IMPLEMENTATION T_MT_Working_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_MT_Working
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_MT_Working_Buffer_Max.impl;

DATA T_MT_Working_Buffer
END T_MT_Working_Buffer;

DATA IMPLEMENTATION T_MT_Working_Buffer.impl
    -- Buffer to hold a marshalled data of type T_MT_Working
SUBCOMPONENTS
    Buffer : data T_MT_Working_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_MT_Working_Buffer.impl;

DATA T_Null_Record
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Null-Record";
    TASTE::Position_In_File => [ line => 16 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END T_Null_Record;

DATA IMPLEMENTATION T_Null_Record.impl
END T_Null_Record.impl;

DATA T_Null_Record_Buffer_Max
END T_Null_Record_Buffer_Max;

DATA IMPLEMENTATION T_Null_Record_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Null_Record_Buffer_Max.impl;

DATA T_Null_Record_Buffer
END T_Null_Record_Buffer;

DATA IMPLEMENTATION T_Null_Record_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
SUBCOMPONENTS
    Buffer : data T_Null_Record_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Null_Record_Buffer.impl;

DATA T_Omega
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("QGen_Tutorial.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_QGEN_TUTORIAL_DATAVIEW);
    TASTE::Ada_Package_Name => "QGEN_TUTORIAL_DATAVIEW";
    Deployment::ASN1_Module_Name => "QGEN-TUTORIAL-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Omega";
    TASTE::Position_In_File => [ line => 36 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END T_Omega;

DATA IMPLEMENTATION T_Omega.impl
END T_Omega.impl;

DATA T_Omega_Buffer_Max
END T_Omega_Buffer_Max;

DATA IMPLEMENTATION T_Omega_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Omega
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Omega_Buffer_Max.impl;

DATA T_Omega_Buffer
END T_Omega_Buffer;

DATA IMPLEMENTATION T_Omega_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Omega
SUBCOMPONENTS
    Buffer : data T_Omega_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Omega_Buffer.impl;

DATA T_Telecommand
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("QGen_Tutorial.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_QGEN_TUTORIAL_DATAVIEW);
    TASTE::Ada_Package_Name => "QGEN_TUTORIAL_DATAVIEW";
    Deployment::ASN1_Module_Name => "QGEN-TUTORIAL-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Telecommand";
    TASTE::Position_In_File => [ line => 43 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END T_Telecommand;

DATA IMPLEMENTATION T_Telecommand.impl
END T_Telecommand.impl;

DATA T_Telecommand_Buffer_Max
END T_Telecommand_Buffer_Max;

DATA IMPLEMENTATION T_Telecommand_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Telecommand
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Telecommand_Buffer_Max.impl;

DATA T_Telecommand_Buffer
END T_Telecommand_Buffer;

DATA IMPLEMENTATION T_Telecommand_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Telecommand
SUBCOMPONENTS
    Buffer : data T_Telecommand_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Telecommand_Buffer.impl;

DATA T_Telemetry
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("QGen_Tutorial.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_QGEN_TUTORIAL_DATAVIEW);
    TASTE::Ada_Package_Name => "QGEN_TUTORIAL_DATAVIEW";
    Deployment::ASN1_Module_Name => "QGEN-TUTORIAL-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Telemetry";
    TASTE::Position_In_File => [ line => 51 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END T_Telemetry;

DATA IMPLEMENTATION T_Telemetry.impl
END T_Telemetry.impl;

DATA T_Telemetry_Buffer_Max
END T_Telemetry_Buffer_Max;

DATA IMPLEMENTATION T_Telemetry_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Telemetry
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Telemetry_Buffer_Max.impl;

DATA T_Telemetry_Buffer
END T_Telemetry_Buffer;

DATA IMPLEMENTATION T_Telemetry_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Telemetry
SUBCOMPONENTS
    Buffer : data T_Telemetry_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Telemetry_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    TASTE::Position_In_File => [ line => 8 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA IMPLEMENTATION T_UInt32.impl
END T_UInt32.impl;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt32_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    TASTE::Position_In_File => [ line => 12 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA IMPLEMENTATION T_UInt8.impl
END T_UInt8.impl;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt8_Buffer.impl;

DATA T_UInteger32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("QGen_Tutorial.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_QGEN_TUTORIAL_DATAVIEW);
    TASTE::Ada_Package_Name => "QGEN_TUTORIAL_DATAVIEW";
    Deployment::ASN1_Module_Name => "QGEN-TUTORIAL-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInteger32";
    TASTE::Position_In_File => [ line => 28 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInteger32;

DATA IMPLEMENTATION T_UInteger32.impl
END T_UInteger32.impl;

DATA T_UInteger32_Buffer_Max
END T_UInteger32_Buffer_Max;

DATA IMPLEMENTATION T_UInteger32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInteger32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInteger32_Buffer_Max.impl;

DATA T_UInteger32_Buffer
END T_UInteger32_Buffer;

DATA IMPLEMENTATION T_UInteger32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInteger32
SUBCOMPONENTS
    Buffer : data T_UInteger32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInteger32_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   T_B_b_T : DATA T_B_b_T.impl;
   T_Boolean : DATA T_Boolean.impl;
   T_Control : DATA T_Control.impl;
   T_Float : DATA T_Float.impl;
   T_Int32 : DATA T_Int32.impl;
   T_Int8 : DATA T_Int8.impl;
   T_MT_Working : DATA T_MT_Working.impl;
   T_Null_Record : DATA T_Null_Record.impl;
   T_Omega : DATA T_Omega.impl;
   T_Telecommand : DATA T_Telecommand.impl;
   T_Telemetry : DATA T_Telemetry.impl;
   T_UInt32 : DATA T_UInt32.impl;
   T_UInt8 : DATA T_UInt8.impl;
   T_UInteger32 : DATA T_UInteger32.impl;
END Taste_DataView.others;
DATA ACN_QGEN_TUTORIAL_DATAVIEW
PROPERTIES
    Source_Text => ("QGen_Tutorial.acn");
    Source_Language => (ACN);
END ACN_QGEN_TUTORIAL_DATAVIEW;

end DataView;
